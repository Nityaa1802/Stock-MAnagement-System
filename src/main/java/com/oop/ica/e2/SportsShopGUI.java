/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.oop.ica.e2;


import java.io.FileWriter;

import java.util.ArrayList;
import javax.swing.JOptionPane;

import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author laves
 */
public class SportsShopGUI extends javax.swing.JFrame {

    /**
     * Creates new form SportsShopGUI
     */
    public SportsShopGUI() {
  
        initComponents();
        this.products=ASCTableModel.fetch2();
        this.setTitle("Asher Sport Consortium");
        populate(this.products);
          
            
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
    ArrayList<ASCStockItem> products=new ArrayList<>();
   
    public void populate(ArrayList<ASCStockItem> products){
        DefaultTableModel model = (DefaultTableModel) ascStockItem.getModel();
            model.setRowCount(0);
           for(int i=0;i<products.size();i++) {
                Object[] addData = {products.get(i).getCode(),products.get(i).getTitle(),products.get(i).getDescription(),products.get(i).getPrice(),products.get(i).getQuantity()};
                if (addData[0] != null && addData[0] != "") {
                    model.addRow(addData);
                }
            }
    }
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDesktopPane1 = new javax.swing.JDesktopPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        ascStockItem = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        buyButton = new javax.swing.JButton();
        addButton = new javax.swing.JButton();
        addYButton = new javax.swing.JButton();
        buyXButton = new javax.swing.JButton();
        quitButton = new javax.swing.JButton();

        javax.swing.GroupLayout jDesktopPane1Layout = new javax.swing.GroupLayout(jDesktopPane1);
        jDesktopPane1.setLayout(jDesktopPane1Layout);
        jDesktopPane1Layout.setHorizontalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jDesktopPane1Layout.setVerticalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        ascStockItem.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Code", "Title", "Description", "Price", "Quantity"
            }
        ));
        ascStockItem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ascStockItemMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(ascStockItem);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 690, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(216, 216, 216))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 344, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(19, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Item Photo", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 12))); // NOI18N

        jLabel1.setBackground(new java.awt.Color(153, 153, 153));
        jLabel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jLabel1.setMaximumSize(new java.awt.Dimension(208, 212));
        jLabel1.setMinimumSize(new java.awt.Dimension(208, 212));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 301, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(208, 208, 208))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 315, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(18, Short.MAX_VALUE))
        );

        buyButton.setText("Buy");
        buyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buyButtonActionPerformed(evt);
            }
        });

        addButton.setText("Add");
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        addYButton.setText("Add Y");
        addYButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addYButtonActionPerformed(evt);
            }
        });

        buyXButton.setText("Buy X");
        buyXButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buyXButtonActionPerformed(evt);
            }
        });

        quitButton.setBackground(new java.awt.Color(204, 0, 0));
        quitButton.setForeground(new java.awt.Color(255, 255, 255));
        quitButton.setText("Quit");
        quitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quitButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(136, 136, 136)
                        .addComponent(buyButton, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(72, 72, 72)
                        .addComponent(addButton, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(63, 63, 63)
                        .addComponent(buyXButton)
                        .addGap(60, 60, 60)
                        .addComponent(addYButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(quitButton)
                        .addGap(29, 29, 29))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 712, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 332, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(22, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(quitButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(addYButton)
                            .addComponent(buyButton)
                            .addComponent(buyXButton)
                            .addComponent(addButton))))
                .addContainerGap(25, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private ImageIcon format = null;
    private void ascStockItemMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ascStockItemMouseClicked
        // TODO add your handling code here:
        int row = ascStockItem.getSelectedRow();
           ImageIcon format = null;
        String tc = ascStockItem.getModel().getValueAt(row, 0).toString();

        format = new ImageIcon(".\\pics\\"+tc+".jpg");
          jLabel1.setIcon(format);
         

    }//GEN-LAST:event_ascStockItemMouseClicked
    

    private void quitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quitButtonActionPerformed
        
    try{
        String path=".\\ASCStock.csv";
        FileWriter pw = new FileWriter(path,false);
       if(this.products.size()>0){
            for(ASCStockItem a:this.products){
            pw.append(a.getCode());
            pw.append(",");
                        pw.append(a.getTitle());
            pw.append(",");
                        pw.append(a.getDescription());
            pw.append(",");
            
                        pw.append(Double.toString(a.getPrice()));
            pw.append(",");
                        pw.append(Integer.toString(a.getQuantity()));
             pw.append("\n");
                
        }
       }
          pw.flush();
            pw.close();
            dispose();
    }
    catch(Exception e){
        JOptionPane.showMessageDialog(null, e);
    }
    }//GEN-LAST:event_quitButtonActionPerformed

    private void buyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buyButtonActionPerformed
        // TODO add your handling code here:

        try {
            int row = ascStockItem.getSelectedRow();
            
            if (row == -1) {
                JOptionPane.showMessageDialog(null, "Please select an item from the table.", "No Item Selected", JOptionPane.ERROR_MESSAGE);
                return;
            }
  
            
            String title=this.products.get(row).getTitle();
            int quantity=this.products.get(row).getQuantity();
            double price=this.products.get(row).getPrice();
     
            if (quantity == 0) {
                JOptionPane.showMessageDialog(null, title + "is not available", "Low Stock Warning", JOptionPane.WARNING_MESSAGE);
                return;
            }
            this.products.get(row).setQuantity(quantity-1);
            String s1 = "Item:" + title;
            String s2 = "Unit purchased:1";
            String s3 = "New stock quantity:" + (quantity - 1);
            String s4 = "Price: $" + price;
            JOptionPane.showMessageDialog(null, s1 + "\n" + s2 + "\n" + s3 + "\n" + s4, "Confirmation of Added Stock", JOptionPane.INFORMATION_MESSAGE);
            populate(this.products);
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e, "Internal Error", JOptionPane.ERROR);
        }
    }//GEN-LAST:event_buyButtonActionPerformed

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        // TODO add your handling code here:

        try {
            int row = ascStockItem.getSelectedRow();
            
            if (row == -1) {
                JOptionPane.showMessageDialog(null, "Please select an item from the table.", "No Item Selected", JOptionPane.ERROR_MESSAGE);
                return;
            }
           
            
           String title=this.products.get(row).getTitle();
            int quantity=this.products.get(row).getQuantity();
           
     
            
           this.products.get(row).setQuantity(quantity+1);
            String s1 = "Item:" + title;
            String s2 = "Unit purchased:1";
            String s3 = "New stock quantity:" + (quantity - 1);
          

            JOptionPane.showMessageDialog(null, s1 + "\n" + s2 + "\n" + s3, "Confirmation of Added Stock", JOptionPane.INFORMATION_MESSAGE);
             populate(this.products);
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e, "Internal Error", JOptionPane.ERROR);
        }
    }//GEN-LAST:event_addButtonActionPerformed

    private void buyXButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buyXButtonActionPerformed
        // TODO add your handling code here:

        try {
            int row = ascStockItem.getSelectedRow();
            
            if (row == -1) {
                JOptionPane.showMessageDialog(null, "Please select an item from the table.", "No Item Selected", JOptionPane.ERROR_MESSAGE);
                return;
            }
            String title=this.products.get(row).getTitle();
            int quantity=this.products.get(row).getQuantity();
            double price=this.products.get(row).getPrice();
            JFrame f = new JFrame();
            String s = JOptionPane.showInputDialog(f, "Please input the Quantity you wish to buy of" + title, "Quantity to purachase", JOptionPane.QUESTION_MESSAGE);
            int demand = 0;
            try {
                demand = Integer.parseInt(s);
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Input a number", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
            if (quantity < demand) {
                JOptionPane.showMessageDialog(null,title+ "has only" + quantity + "unit of stock", "Low Stock Warning", JOptionPane.WARNING_MESSAGE);
                return;
            }
            this.products.get(row).setQuantity(quantity-demand);
            String s1 = "Item:" + title;
            String s2 = "Unit purchased: "+demand;
            String s3 = "New stock quantity:" + (quantity - demand);
            String s4 = "Price: $" + price;
            JOptionPane.showMessageDialog(null, s1 + "\n" + s2 + "\n" + s3 + "\n" + s4, "Confirmation of Added Stock", JOptionPane.INFORMATION_MESSAGE);
             populate(this.products);
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e, "Internal Error", JOptionPane.ERROR);
        }

    }//GEN-LAST:event_buyXButtonActionPerformed

    private void addYButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addYButtonActionPerformed
        // TODO add your handling code here:
        try {
            int row = ascStockItem.getSelectedRow();
            
            if (row == -1) {
                JOptionPane.showMessageDialog(null, "Please select an item from the table.", "No Item Selected", JOptionPane.ERROR_MESSAGE);
                return;
            }
            String title=this.products.get(row).getTitle();
            int quantity=this.products.get(row).getQuantity();
            double price=this.products.get(row).getPrice();
             JFrame f = new JFrame();
            String s = JOptionPane.showInputDialog(f, "Please input the Quantity you wish to buy of" + title, "Quantity to purachase", JOptionPane.QUESTION_MESSAGE);
            int demand = 0;
            try {
                demand = Integer.parseInt(s);
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Input a number", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
            
            this.products.get(row).setQuantity(quantity+demand);
            String s1 = "Item:" + title;
            String s2 = "Unit purchased: "+demand;
            String s3 = "New stock quantity:" + (quantity +demand);
            String s4 = "Price: $" + price;
            JOptionPane.showMessageDialog(null, s1 + "\n" + s2 + "\n" + s3, "Confirmation of Added Stock", JOptionPane.INFORMATION_MESSAGE);
            populate(this.products);
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e, "Internal Error", JOptionPane.ERROR);
        }
        

    }//GEN-LAST:event_addYButtonActionPerformed
    /*
     byte[] photo=null;
   String filename=null;*/

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SportsShopGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SportsShopGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SportsShopGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SportsShopGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SportsShopGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.JButton addYButton;
    private javax.swing.JTable ascStockItem;
    private javax.swing.JButton buyButton;
    private javax.swing.JButton buyXButton;
    private javax.swing.JDesktopPane jDesktopPane1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton quitButton;
    // End of variables declaration//GEN-END:variables

}
